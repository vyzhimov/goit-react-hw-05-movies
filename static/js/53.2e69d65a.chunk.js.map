{"version":3,"file":"static/js/53.2e69d65a.chunk.js","mappings":"iPAmEA,UA/DqB,WAAO,IAAD,EACnBA,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAU,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GAC1CC,GAAWC,EAAAA,EAAAA,GAAY,cAAe,GAAIH,GA0BhD,OAdAI,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEwBC,EAAAA,EAAAA,GAAeH,GAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IAFvD,OAEUC,EAFV,OAGIX,GAAa,OAAIW,IACjBC,QAAQC,IAAIF,GAJhB,0GADc,sBASVV,GATW,WAAD,wBAUZa,EAEH,GAAE,CAACX,EAAUF,KAGZ,iCACE,kBAAMc,SAtBW,SAAAC,GACnBA,EAAIC,iBAEJtB,EAA8B,KAAdE,EAAmB,CAAC,EAAI,CAAEqB,MAAOrB,EAAUsB,QAC5D,EAkBG,WACE,kBACEC,KAAK,OAELC,KAAK,QACLC,MAAOzB,EACP0B,SAhCkB,SAAAP,GACxBlB,EAAakB,EAAIQ,cAAcF,MAChC,KAgCK,mBAAQF,KAAK,SAAb,uBAEDnB,IACC,wBACGF,EACE0B,QAAO,SAAAd,GAAK,MAAgC,OAA5BA,EAAMe,iBAAV,IACZC,KAAI,SAAAhB,GACH,OACE,yBACE,SAAC,KAAD,CAAMiB,GAAE,kBAAajB,EAAMkB,IAAMC,MAAO,CAAEC,KAAMxC,GAAhD,UACE,wBAAKoB,EAAMqB,oBAFNrB,EAAMkB,GAMlB,QAKZ,C,yHC/DDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAW,QAEX/B,EAAc,SAACgC,EAAMC,EAASnB,GAClC,OAAQkB,GACN,IAAK,WACH,MAAM,+BAAN,OAAsCF,GACxC,IAAK,YACH,MAAM,UAAN,OAAiBG,EAAjB,oBAAoCH,EAApC,qBAAwDC,GAC1D,IAAK,OACH,MAAM,UAAN,OAAiBE,EAAjB,4BAA4CH,EAA5C,qBAAgEC,GAClE,IAAK,UACH,MAAM,UAAN,OAAiBE,EAAjB,4BAA4CH,EAA5C,gCACF,IAAK,cACH,MAAM,yBAAN,OAAgCA,EAAhC,qBAAoDC,EAApD,kBAAsEjB,EAAtE,+BACF,QACEN,QAAQC,IAAI,WAEjB,EAEKP,EAAc,mCAAG,WAAMH,GAAN,8EACfmC,EAAWL,EAAAA,EAAAA,IAAA,UAAa9B,IADT,kBAGdmC,GAHc,2CAAH,qD","sources":["pages/SearchMovies.js","services/moviedb-api.js"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getEndPoint, fetchMovieData } from 'services/moviedb-api';\n\nconst SearchMovies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieName, setMovieName] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const movieQuery = searchParams.get('query') ?? '';\n  const endPoint = getEndPoint('searchMovie', '', movieQuery);\n\n  const handleInputChange = evt => {\n    setMovieName(evt.currentTarget.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    setSearchParams(movieName === '' ? {} : { query: movieName.trim() });\n  };\n\n  useEffect(() => {\n    async function searchMovieByQuery() {\n      try {\n        const movie = await fetchMovieData(endPoint).then(r => r.data.results);\n        setMovieList([...movie]);\n        console.log(movie);\n      } catch (error) {}\n    }\n\n    if (movieQuery) {\n      searchMovieByQuery();\n    }\n  }, [endPoint, movieQuery]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          name=\"movie\"\n          value={movieName}\n          onChange={handleInputChange}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movieQuery && (\n        <ul>\n          {movieList\n            .filter(movie => movie.original_language === 'en')\n            .map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                    <h2>{movie.original_title}</h2>\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default SearchMovies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '326ecd742c922271411e34618fb1e345';\nconst language = 'en-US';\n\nconst getEndPoint = (path, movieId, query) => {\n  switch (path) {\n    case 'trending':\n      return `/trending/movie/day?api_key=${API_KEY}`;\n    case 'movieInfo':\n      return `/movie/${movieId}?api_key=${API_KEY}&language=${language}`;\n    case 'cast':\n      return `/movie/${movieId}/credits?api_key=${API_KEY}&language=${language}`;\n    case 'reviews':\n      return `/movie/${movieId}/reviews?api_key=${API_KEY}&$language={language}&page=1`;\n    case 'searchMovie':\n      return `/search/movie?api_key=${API_KEY}&language=${language}&query=${query}&page=1&include_adult=false`;\n    default:\n      console.log('default');\n  }\n};\n\nconst fetchMovieData = async endPoint => {\n  const response = axios.get(`${endPoint}`);\n\n  return response;\n};\n\nexport { getEndPoint, fetchMovieData };\n"],"names":["location","useLocation","useSearchParams","searchParams","setSearchParams","useState","movieName","setMovieName","movieList","setMovieList","movieQuery","get","endPoint","getEndPoint","useEffect","fetchMovieData","then","r","data","results","movie","console","log","searchMovieByQuery","onSubmit","evt","preventDefault","query","trim","type","name","value","onChange","currentTarget","filter","original_language","map","to","id","state","from","original_title","axios","API_KEY","language","path","movieId","response"],"sourceRoot":""}