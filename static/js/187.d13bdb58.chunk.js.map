{"version":3,"file":"static/js/187.d13bdb58.chunk.js","mappings":"ySAEaA,EAAcC,EAAAA,EAAAA,GAAH,wGAOXC,EAAkBD,EAAAA,EAAAA,GAAH,qHAWfE,EAAYF,EAAAA,EAAAA,GAAH,8D,SCkCtB,EA/CgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,GAAY,UAAWR,GAkBxC,OAhBAS,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GAFjB,UAGyBI,EAAAA,EAAAA,GAAeH,GAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IAHxD,OAGUC,EAHV,OAIIX,GAAW,OAAIW,IAJnB,gDAMIC,QAAQC,IAAI,KAAMC,SANtB,yBAQIZ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAada,EACD,GAAE,CAACZ,KAGF,gCACGF,IAAa,SAACe,EAAA,EAAD,KACZf,IACA,SAACT,EAAD,UACGO,EAAQkB,OAAS,EAChBlB,EAAQmB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAAC3B,EAAD,YACE,sCACU,0BAAO0B,QAEjB,uBAAIC,MAJgBF,EAOzB,KAED,SAACxB,EAAD,uCAMX,C,yHClDD2B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAW,QAEXpB,EAAc,SAACqB,EAAM7B,EAAS8B,GAClC,OAAQD,GACN,IAAK,WACH,MAAM,+BAAN,OAAsCF,GACxC,IAAK,YACH,MAAM,UAAN,OAAiB3B,EAAjB,oBAAoC2B,EAApC,qBAAwDC,GAC1D,IAAK,OACH,MAAM,UAAN,OAAiB5B,EAAjB,4BAA4C2B,EAA5C,qBAAgEC,GAClE,IAAK,UACH,MAAM,UAAN,OAAiB5B,EAAjB,4BAA4C2B,EAA5C,gCACF,IAAK,cACH,MAAM,yBAAN,OAAgCA,EAAhC,qBAAoDC,EAApD,kBAAsEE,EAAtE,+BACF,QACEd,QAAQC,IAAI,WAEjB,EAEKP,EAAc,mCAAG,WAAMH,GAAN,8EACfwB,EAAWL,EAAAA,EAAAA,IAAA,UAAanB,IADT,kBAGdwB,GAHc,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/moviedb-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-top: 30px;\n`;\n\nexport const ReviewsListItem = styled.li`\n  color: #fff;\n\n  & span {\n    color: #e20712;\n  }\n  & p {\n    margin-top: 30px;\n  }\n`;\n\nexport const NoReviews = styled.h2`\n  color: #fff;\n  margin: 30px auto;\n`;\n","import IsLoading from 'components/IsLoading';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getEndPoint, fetchMovieData } from 'services/moviedb-api';\nimport { ReviewsList, ReviewsListItem, NoReviews } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const endPoint = getEndPoint('reviews', movieId);\n\n  useEffect(() => {\n    async function getReview() {\n      try {\n        setIsLoading(true);\n        const review = await fetchMovieData(endPoint).then(r => r.data.results);\n        setReviews([...review]);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getReview();\n  }, [endPoint]);\n\n  return (\n    <>\n      {isLoading && <IsLoading />}\n      {!isLoading && (\n        <ReviewsList>\n          {reviews.length > 0 ? (\n            reviews.map(({ id, author, content }) => {\n              return (\n                <ReviewsListItem key={id}>\n                  <h2>\n                    Author: <span>{author}</span>\n                  </h2>\n                  <p>{content}</p>\n                </ReviewsListItem>\n              );\n            })\n          ) : (\n            <NoReviews>No reviews was found</NoReviews>\n          )}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '326ecd742c922271411e34618fb1e345';\nconst language = 'en-US';\n\nconst getEndPoint = (path, movieId, query) => {\n  switch (path) {\n    case 'trending':\n      return `/trending/movie/day?api_key=${API_KEY}`;\n    case 'movieInfo':\n      return `/movie/${movieId}?api_key=${API_KEY}&language=${language}`;\n    case 'cast':\n      return `/movie/${movieId}/credits?api_key=${API_KEY}&language=${language}`;\n    case 'reviews':\n      return `/movie/${movieId}/reviews?api_key=${API_KEY}&$language={language}&page=1`;\n    case 'searchMovie':\n      return `/search/movie?api_key=${API_KEY}&language=${language}&query=${query}&page=1&include_adult=false`;\n    default:\n      console.log('default');\n  }\n};\n\nconst fetchMovieData = async endPoint => {\n  const response = axios.get(`${endPoint}`);\n\n  return response;\n};\n\nexport { getEndPoint, fetchMovieData };\n"],"names":["ReviewsList","styled","ReviewsListItem","NoReviews","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","endPoint","getEndPoint","useEffect","fetchMovieData","then","r","data","results","review","console","log","message","getReview","IsLoading","length","map","id","author","content","axios","API_KEY","language","path","query","response"],"sourceRoot":""}