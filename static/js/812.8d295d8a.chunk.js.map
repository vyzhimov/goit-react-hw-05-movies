{"version":3,"file":"static/js/812.8d295d8a.chunk.js","mappings":"wQA4CA,EAxCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,GAAY,UAAWN,GAoBxC,OAlBAO,EAAAA,EAAAA,YAAU,WAAM,wCAQd,8GAEyBC,EAAAA,EAAAA,GAAeH,GAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IAFxD,OAEUT,EAFV,OAGIC,GAAU,OAAID,IAHlB,wGARc,0DAedU,EACD,GAAE,CAACR,KAGF,wBACGF,GACCA,EAAOW,KAAI,SAAAC,GACT,OACE,2BACE,sCACU,0BAAOA,EAASC,aAE1B,uBAAID,EAASE,YAJNF,EAASG,GAOrB,KAGR,C,qHCxCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMb,EAAc,SAACc,EAAMpB,GACzB,OAAQoB,GACN,IAAK,WACH,MAAO,sBACT,IAAK,YACH,MAAM,UAAN,OAAiBpB,GACnB,IAAK,OACH,MAAM,UAAN,OAAiBA,EAAjB,YACF,IAAK,UACH,MAAM,UAAN,OAAiBA,EAAjB,YACF,IAAK,cACH,MAAM,gBACR,QACEqB,QAAQC,IAAI,WAEjB,EAEKd,EAAc,mCAAG,WAAOH,GAAP,4FAAiBkB,EAAjB,+BAAyB,GACxCC,EAAWL,EAAAA,EAAAA,IAAA,UAAad,GAAY,CACxCoB,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVJ,MAAOA,EACPK,KAAM,EACNC,eAAe,KAPE,kBAWdL,GAXc,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/moviedb-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getEndPoint, fetchMovieData } from 'services/moviedb-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n  const endPoint = getEndPoint('reviews', movieId);\n\n  useEffect(() => {\n    // async function fetchReview() {\n    //   const response = await axios.get(\n    //     `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    //   );\n    //   return response.data.results;\n    // }\n\n    async function getReview() {\n      try {\n        const review = await fetchMovieData(endPoint).then(r => r.data.results);\n        setReview([...review]);\n      } catch (error) {}\n    }\n\n    getReview();\n  }, [endPoint]);\n\n  return (\n    <ul>\n      {review &&\n        review.map(reviewer => {\n          return (\n            <li key={reviewer.id}>\n              <h2>\n                Author: <span>{reviewer.author}</span>\n              </h2>\n              <p>{reviewer.content}</p>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst getEndPoint = (path, movieId) => {\n  switch (path) {\n    case 'trending':\n      return '/trending/movie/day';\n    case 'movieInfo':\n      return `/movie/${movieId}`;\n    case 'cast':\n      return `/movie/${movieId}/credits`;\n    case 'reviews':\n      return `/movie/${movieId}/reviews`;\n    case 'searchMovie':\n      return `/search/movie`;\n    default:\n      console.log('default');\n  }\n};\n\nconst fetchMovieData = async (endPoint, query = '') => {\n  const response = axios.get(`${endPoint}`, {\n    params: {\n      api_key: '326ecd742c922271411e34618fb1e345',\n      language: 'en-US',\n      query: query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n\n  return response;\n};\n\nexport { getEndPoint, fetchMovieData };\n"],"names":["movieId","useParams","useState","review","setReview","endPoint","getEndPoint","useEffect","fetchMovieData","then","r","data","results","getReview","map","reviewer","author","content","id","axios","path","console","log","query","response","params","api_key","language","page","include_adult"],"sourceRoot":""}