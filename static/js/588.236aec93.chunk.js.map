{"version":3,"file":"static/js/588.236aec93.chunk.js","mappings":"uSAEaA,EAAWC,EAAAA,EAAAA,GAAH,qJASRC,EAAeD,EAAAA,EAAAA,GAAH,wM,0EC+CzB,EAlDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,GAAY,OAAQV,GAiBrC,OAfAW,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIL,GAAa,GAFjB,UAGuBM,EAAAA,EAAAA,GAAeH,GAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,IAAX,IAHtD,OAGUA,EAHV,OAIIZ,GAAY,OAAIY,IAJpB,gDAMIR,EAAS,KAAMS,SANnB,yBAQIX,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdY,EACD,GAAE,CAACT,KAGF,gCACGJ,IAAa,SAACc,EAAA,EAAD,IACbZ,IACC,0BACE,uBAAIA,OAGNF,IACA,SAACR,EAAD,UACGM,GACCA,EAASiB,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAClBC,EAAQD,EAAY,8CACiBA,GACvCE,EACJ,OACE,UAAC1B,EAAD,YACE,uBAAIuB,KACJ,gBAAKI,IAAKF,EAAOG,IAAKL,MAFLD,EAKtB,QAKZ,C,yHCtDDO,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAW,QAEXpB,EAAc,SAACqB,EAAM/B,EAASgC,GAClC,OAAQD,GACN,IAAK,WACH,MAAM,+BAAN,OAAsCF,GACxC,IAAK,YACH,MAAM,UAAN,OAAiB7B,EAAjB,oBAAoC6B,EAApC,qBAAwDC,GAC1D,IAAK,OACH,MAAM,UAAN,OAAiB9B,EAAjB,4BAA4C6B,EAA5C,qBAAgEC,GAClE,IAAK,UACH,MAAM,UAAN,OAAiB9B,EAAjB,4BAA4C6B,EAA5C,gCACF,IAAK,cACH,MAAM,yBAAN,OAAgCA,EAAhC,qBAAoDC,EAApD,kBAAsEE,EAAtE,+BACF,QACEC,QAAQC,IAAI,WAEjB,EAEKtB,EAAc,mCAAG,WAAMH,GAAN,8EACf0B,EAAWP,EAAAA,EAAAA,IAAA,UAAanB,IADT,kBAGd0B,GAHc,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviedb-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const CastListItem = styled.li`\n  width: calc((100% - 120px) / 6);\n\n  & p {\n    color: #fff;\n    font-size: 18px;\n    text-align: center;\n  }\n\n  & img {\n    margin-top: 15px;\n    width: 100%;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getEndPoint, fetchMovieData } from 'services/moviedb-api';\nimport IsLoading from 'components/IsLoading';\nimport { CastList, CastListItem } from './Cast.styled';\nimport NoImage from './no-image-available.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const endPoint = getEndPoint('cast', movieId);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setIsLoading(true);\n        const cast = await fetchMovieData(endPoint).then(r => r.data.cast);\n        setCastList([...cast]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getCast();\n  }, [endPoint]);\n\n  return (\n    <>\n      {isLoading && <IsLoading />}\n      {error && (\n        <div>\n          <p>{error}</p>\n        </div>\n      )}\n      {!isLoading && (\n        <CastList>\n          {castList &&\n            castList.map(({ id, name, profile_path }) => {\n              const image = profile_path\n                ? `https://image.tmdb.org/t/p/original/${profile_path}`\n                : NoImage;\n              return (\n                <CastListItem key={id}>\n                  <p>{name}</p>\n                  <img src={image} alt={name} />\n                </CastListItem>\n              );\n            })}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '326ecd742c922271411e34618fb1e345';\nconst language = 'en-US';\n\nconst getEndPoint = (path, movieId, query) => {\n  switch (path) {\n    case 'trending':\n      return `/trending/movie/day?api_key=${API_KEY}`;\n    case 'movieInfo':\n      return `/movie/${movieId}?api_key=${API_KEY}&language=${language}`;\n    case 'cast':\n      return `/movie/${movieId}/credits?api_key=${API_KEY}&language=${language}`;\n    case 'reviews':\n      return `/movie/${movieId}/reviews?api_key=${API_KEY}&$language={language}&page=1`;\n    case 'searchMovie':\n      return `/search/movie?api_key=${API_KEY}&language=${language}&query=${query}&page=1&include_adult=false`;\n    default:\n      console.log('default');\n  }\n};\n\nconst fetchMovieData = async endPoint => {\n  const response = axios.get(`${endPoint}`);\n\n  return response;\n};\n\nexport { getEndPoint, fetchMovieData };\n"],"names":["CastList","styled","CastListItem","movieId","useParams","useState","castList","setCastList","isLoading","setIsLoading","error","setError","endPoint","getEndPoint","useEffect","fetchMovieData","then","r","data","cast","message","getCast","IsLoading","map","id","name","profile_path","image","NoImage","src","alt","axios","API_KEY","language","path","query","console","log","response"],"sourceRoot":""}