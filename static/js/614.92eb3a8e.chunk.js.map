{"version":3,"file":"static/js/614.92eb3a8e.chunk.js","mappings":"kMAEaA,EAAeC,EAAAA,EAAAA,IAAH,sKAUZC,EAAWD,EAAAA,EAAAA,IAAH,4D,+DCGrB,EAZc,SAAC,GAAiB,IAAfE,EAAc,EAAdA,QACf,OACE,UAACH,EAAD,YACE,SAACE,EAAD,CAAUE,IAAKC,EAASC,IAAI,aAC5B,4BACE,gFACA,kCAAUH,UAIjB,C,uJC0CD,UAjDa,WACX,IAAMI,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,GAAY,YAkB7B,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIL,GAAa,GAFjB,UAGyBM,EAAAA,EAAAA,GAAeH,GAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IAHxD,OAGUC,EAHV,OAIIb,GAAiB,OAAIa,IAJzB,gDAMIT,EAAS,KAAMZ,SANnB,yBAQIU,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAadY,EACD,GAAE,CAACT,KAGF,gCACGJ,IAAa,SAAC,IAAD,IACbE,IAAS,SAAC,IAAD,CAAOX,QAASW,KACxBF,IAAcE,IACd,wBACGJ,EAAcgB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cACxC,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMzB,GAA1C,WACE,gBACEH,IAAG,8CAAyCyB,GAC5CvB,IAAKsB,EACLK,MAAM,QAEPL,MAPID,EAWZ,QAKV,C,yHCnDDO,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAW,QAEXnB,EAAc,SAACoB,EAAMC,EAASC,GAClC,OAAQF,GACN,IAAK,WACH,MAAM,+BAAN,OAAsCF,GACxC,IAAK,YACH,MAAM,UAAN,OAAiBG,EAAjB,oBAAoCH,EAApC,qBAAwDC,GAC1D,IAAK,OACH,MAAM,UAAN,OAAiBE,EAAjB,4BAA4CH,EAA5C,qBAAgEC,GAClE,IAAK,UACH,MAAM,UAAN,OAAiBE,EAAjB,4BAA4CH,EAA5C,gCACF,IAAK,cACH,MAAM,yBAAN,OAAgCA,EAAhC,qBAAoDC,EAApD,kBAAsEG,EAAtE,+BACF,QACEC,QAAQC,IAAI,WAEjB,EAEKtB,EAAc,mCAAG,WAAMH,GAAN,8EACf0B,EAAWR,EAAAA,EAAAA,IAAA,UAAalB,IADT,kBAGd0B,GAHc,2CAAH,qD","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","pages/Home.js","services/moviedb-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  margin-top: 100px;\n  color: #fff;\n  font-size: 20px;\n`;\n\nexport const ErrorImg = styled.img`\n  display: block;\n  width: 100px;\n`;\n","import { ErrorWrapper, ErrorImg } from './Error.styled';\nimport Warning from './Warning.png';\n\nconst Error = ({ message }) => {\n  return (\n    <ErrorWrapper>\n      <ErrorImg src={Warning} alt=\"warning\" />\n      <div>\n        <p>Sorry there was an error. Please, reload the page! </p>\n        <p>Code: {message}</p>\n      </div>\n    </ErrorWrapper>\n  );\n};\n\nexport default Error;\n","import { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getEndPoint, fetchMovieData } from 'services/moviedb-api';\nimport IsLoading from 'components/IsLoading';\nimport Error from 'components/Error';\n\nconst Home = () => {\n  const location = useLocation();\n  const [trendingMovie, setTrendingMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const endPoint = getEndPoint('trending');\n\n  useEffect(() => {\n    async function FetchTrendingMovies() {\n      try {\n        setIsLoading(true);\n        const movies = await fetchMovieData(endPoint).then(r => r.data.results);\n        setTrendingMovie([...movies]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    FetchTrendingMovies();\n  }, [endPoint]);\n\n  return (\n    <>\n      {isLoading && <IsLoading />}\n      {error && <Error message={error} />}\n      {!isLoading && !error && (\n        <ul>\n          {trendingMovie.map(({ id, original_title, backdrop_path }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\n                    alt={original_title}\n                    width=\"200\"\n                  ></img>\n                  {original_title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '326ecd742c922271411e34618fb1e345';\nconst language = 'en-US';\n\nconst getEndPoint = (path, movieId, query) => {\n  switch (path) {\n    case 'trending':\n      return `/trending/movie/day?api_key=${API_KEY}`;\n    case 'movieInfo':\n      return `/movie/${movieId}?api_key=${API_KEY}&language=${language}`;\n    case 'cast':\n      return `/movie/${movieId}/credits?api_key=${API_KEY}&language=${language}`;\n    case 'reviews':\n      return `/movie/${movieId}/reviews?api_key=${API_KEY}&$language={language}&page=1`;\n    case 'searchMovie':\n      return `/search/movie?api_key=${API_KEY}&language=${language}&query=${query}&page=1&include_adult=false`;\n    default:\n      console.log('default');\n  }\n};\n\nconst fetchMovieData = async endPoint => {\n  const response = axios.get(`${endPoint}`);\n\n  return response;\n};\n\nexport { getEndPoint, fetchMovieData };\n"],"names":["ErrorWrapper","styled","ErrorImg","message","src","Warning","alt","location","useLocation","useState","trendingMovie","setTrendingMovie","isLoading","setIsLoading","error","setError","endPoint","getEndPoint","useEffect","fetchMovieData","then","r","data","results","movies","FetchTrendingMovies","map","id","original_title","backdrop_path","to","state","from","width","axios","API_KEY","language","path","movieId","query","console","log","response"],"sourceRoot":""}