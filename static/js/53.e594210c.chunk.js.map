{"version":3,"file":"static/js/53.e594210c.chunk.js","mappings":"wOA2EA,UAvEqB,WAAO,IAAD,EACnBA,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAU,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GAC1CC,GAAWC,EAAAA,EAAAA,IAAY,eAoC7B,OAxBAC,EAAAA,EAAAA,YAAU,WAAM,wCAYd,8GAEwBC,EAAAA,EAAAA,IAAYL,GAAYM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IAFtD,OAEUC,EAFV,OAGIX,GAAa,OAAIW,IAHrB,wGAZc,sBASdC,QAAQC,IAAIV,GACZS,QAAQC,IAAIZ,GASRA,GAnBU,mCAoBZa,EAEH,GAAE,CAACX,EAAUF,KAGZ,iCACE,kBAAMc,SAhCW,SAAAC,GACnBA,EAAIC,iBAEJtB,EAA8B,KAAdE,EAAmB,CAAC,EAAI,CAAEqB,MAAOrB,GAClD,EA4BG,WACE,kBACEsB,KAAK,OAELC,KAAK,QACLC,MAAOxB,EACPyB,SA1CkB,SAAAN,GACxBlB,EAAakB,EAAIO,cAAcF,MAChC,KA0CK,mBAAQF,KAAK,SAAb,uBAEDlB,IACC,wBACGF,EAAUyB,KAAI,SAAAb,GACb,OACE,yBACE,SAAC,KAAD,CAAMc,GAAE,kBAAad,EAAMe,IAAMC,MAAO,CAAEC,KAAMrC,GAAhD,UACE,wBAAKoB,EAAMkB,oBAFNlB,EAAMe,GAMlB,QAKV,C,+ICjEDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAM1B,EAAc,SAAC2B,EAAMC,GACzB,OAAQD,GACN,IAAK,WACH,MAAO,sBACT,IAAK,YACH,MAAM,UAAN,OAAiBC,GACnB,IAAK,OACH,MAAM,UAAN,OAAiBA,EAAjB,YACF,IAAK,UACH,MAAM,UAAN,OAAiBA,EAAjB,YACF,IAAK,cACH,MAAM,gBACR,QACEpB,QAAQC,IAAI,WAEjB,EAEKoB,EAAc,mCAAG,WAAO9B,GAAP,4FAAiBe,EAAjB,+BAAyB,GACxCgB,EAAWJ,EAAAA,EAAAA,IAAA,UAAa3B,GAAY,CACxCgC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVnB,MAAOA,EACPoB,KAAM,KANW,kBAWdJ,GAXc,2CAAH,sDAcd5B,EAAW,mCAAG,WAAMY,GAAN,8EACZgB,EAAWJ,EAAAA,EAAAA,IAAA,sEACgDZ,EADhD,+CADC,kBAIXgB,GAJW,2CAAH,qD","sources":["pages/SearchMovies.js","services/moviedb-api.js"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getEndPoint, fetchSearch } from 'services/moviedb-api';\n\nconst SearchMovies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieName, setMovieName] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const movieQuery = searchParams.get('query') ?? '';\n  const endPoint = getEndPoint('searchMovie');\n\n  const handleInputChange = evt => {\n    setMovieName(evt.currentTarget.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    setSearchParams(movieName === '' ? {} : { query: movieName });\n  };\n\n  useEffect(() => {\n    // async function fetchMovie() {\n    //   const response = await axios.get(\n    //     `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${movieQuery}&page=1&include_adult=false`\n    //     `\n    //   );\n    //   return response.data.results;\n    // }\n\n    console.log(endPoint);\n    console.log(movieQuery);\n\n    async function searchMovieByQuery() {\n      try {\n        const movie = await fetchSearch(movieQuery).then(r => r.data.results);\n        setMovieList([...movie]);\n      } catch (error) {}\n    }\n\n    if (movieQuery) {\n      searchMovieByQuery();\n    }\n  }, [endPoint, movieQuery]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          //   pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          name=\"movie\"\n          value={movieName}\n          onChange={handleInputChange}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movieQuery && (\n        <ul>\n          {movieList.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  <h2>{movie.original_title}</h2>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default SearchMovies;\n","import axios from 'axios';\n\n// `https://api.themoviedb.org/3/movie/id?api_key=key`; ok\n// `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}` ok\n// `https://api.themoviedb.org/3/search/movie?api_key=key&language=en-US&query=movie&page=1`ok\n// `https://api.themoviedb.org/3/trending/movie/day?api_key=key`;\n// https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst getEndPoint = (path, movieId) => {\n  switch (path) {\n    case 'trending':\n      return '/trending/movie/day';\n    case 'movieInfo':\n      return `/movie/${movieId}`;\n    case 'cast':\n      return `/movie/${movieId}/credits`;\n    case 'reviews':\n      return `/movie/${movieId}/reviews`;\n    case 'searchMovie':\n      return `/search/movie`;\n    default:\n      console.log('default');\n  }\n};\n\nconst fetchMovieData = async (endPoint, query = '') => {\n  const response = axios.get(`${endPoint}`, {\n    params: {\n      api_key: '326ecd742c922271411e34618fb1e345',\n      language: 'en-US',\n      query: query,\n      page: 1,\n      //   include_adult: false,\n    },\n  });\n\n  return response;\n};\n\nconst fetchSearch = async query => {\n  const response = axios.get(\n    `search/movie?api_key=326ecd742c922271411e34618fb1e345&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response;\n};\n\nexport { getEndPoint, fetchMovieData, fetchSearch };\n"],"names":["location","useLocation","useSearchParams","searchParams","setSearchParams","useState","movieName","setMovieName","movieList","setMovieList","movieQuery","get","endPoint","getEndPoint","useEffect","fetchSearch","then","r","data","results","movie","console","log","searchMovieByQuery","onSubmit","evt","preventDefault","query","type","name","value","onChange","currentTarget","map","to","id","state","from","original_title","axios","path","movieId","fetchMovieData","response","params","api_key","language","page"],"sourceRoot":""}